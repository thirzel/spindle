<?php
// This script and data application were generated by AppGini 5.31
// Download AppGini for free from http://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/biblio_author.php");
	include("$currDir/biblio_author_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('biblio_author');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "biblio_author";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV=array(   
		"`biblio_author`.`id`" => "id",
		"`biblio_author`.`memberID`" => "memberID",
		"`biblio_author`.`img`" => "img",
		"`biblio_author`.`groupID`" => "groupID",
		"`biblio_author`.`selection_class`" => "selection_class",
		"IF(    CHAR_LENGTH(`class_agent_type11`.`type`), CONCAT_WS('',   `class_agent_type11`.`type`), '') /* Agent category */" => "agenttype1",
		"IF(    CHAR_LENGTH(`class_agent_type21`.`type`), CONCAT_WS('',   `class_agent_type21`.`type`), '') /* Agent group */" => "agenttype2",
		"`biblio_author`.`gender`" => "gender",
		"`biblio_author`.`last_name`" => "last_name",
		"`biblio_author`.`first_name`" => "first_name",
		"`biblio_author`.`other_name`" => "other_name",
		"`biblio_author`.`birthday`" => "birthday",
		"`biblio_author`.`birth_location`" => "birth_location",
		"`biblio_author`.`deathday`" => "deathday",
		"`biblio_author`.`death_location`" => "death_location",
		"`biblio_author`.`workplace`" => "workplace",
		"`biblio_author`.`knows`" => "knows",
		"`biblio_author`.`shortbio`" => "shortbio",
		"`biblio_author`.`data_evaluation`" => "data_evaluation",
		"`biblio_author`.`authority_record`" => "authority_record",
		"IF(    CHAR_LENGTH(`class_authority_agent1`.`abbreviation`), CONCAT_WS('',   `class_authority_agent1`.`abbreviation`), '') /* Authority organization */" => "authority_organization"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`biblio_author`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => '`biblio_author`.`birthday`',
		13 => 13,
		14 => '`biblio_author`.`deathday`',
		15 => 15,
		16 => 16,
		17 => 17,
		18 => 18,
		19 => 19,
		20 => 20,
		21 => 21
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV=array(   
		"`biblio_author`.`id`" => "id",
		"`biblio_author`.`memberID`" => "memberID",
		"`biblio_author`.`img`" => "img",
		"`biblio_author`.`groupID`" => "groupID",
		"`biblio_author`.`selection_class`" => "selection_class",
		"IF(    CHAR_LENGTH(`class_agent_type11`.`type`), CONCAT_WS('',   `class_agent_type11`.`type`), '') /* Agent category */" => "agenttype1",
		"IF(    CHAR_LENGTH(`class_agent_type21`.`type`), CONCAT_WS('',   `class_agent_type21`.`type`), '') /* Agent group */" => "agenttype2",
		"`biblio_author`.`gender`" => "gender",
		"`biblio_author`.`last_name`" => "last_name",
		"`biblio_author`.`first_name`" => "first_name",
		"`biblio_author`.`other_name`" => "other_name",
		"`biblio_author`.`birthday`" => "birthday",
		"`biblio_author`.`birth_location`" => "birth_location",
		"`biblio_author`.`deathday`" => "deathday",
		"`biblio_author`.`death_location`" => "death_location",
		"`biblio_author`.`workplace`" => "workplace",
		"`biblio_author`.`knows`" => "knows",
		"`biblio_author`.`shortbio`" => "shortbio",
		"`biblio_author`.`data_evaluation`" => "data_evaluation",
		"`biblio_author`.`authority_record`" => "authority_record",
		"IF(    CHAR_LENGTH(`class_authority_agent1`.`abbreviation`), CONCAT_WS('',   `class_authority_agent1`.`abbreviation`), '') /* Authority organization */" => "authority_organization"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters=array(   
		"`biblio_author`.`id`" => "ID",
		"`biblio_author`.`memberID`" => "MemberID",
		"`biblio_author`.`groupID`" => "GroupID",
		"`biblio_author`.`selection_class`" => "Selection phase",
		"IF(    CHAR_LENGTH(`class_agent_type11`.`type`), CONCAT_WS('',   `class_agent_type11`.`type`), '') /* Agent category */" => "Agent category",
		"IF(    CHAR_LENGTH(`class_agent_type21`.`type`), CONCAT_WS('',   `class_agent_type21`.`type`), '') /* Agent group */" => "Agent group",
		"`biblio_author`.`gender`" => "Gender",
		"`biblio_author`.`last_name`" => "Last name",
		"`biblio_author`.`first_name`" => "First name",
		"`biblio_author`.`other_name`" => "Other name(s)",
		"`biblio_author`.`birthday`" => "Date of birth",
		"`biblio_author`.`birth_location`" => "Place of birth",
		"`biblio_author`.`deathday`" => "Date of death",
		"`biblio_author`.`death_location`" => "Place of death",
		"`biblio_author`.`workplace`" => "Place of action",
		"`biblio_author`.`knows`" => "Related person(s)",
		"`biblio_author`.`shortbio`" => "Short biography",
		"`biblio_author`.`data_evaluation`" => "Data evaluation",
		"`biblio_author`.`authority_record`" => "Authority record",
		"IF(    CHAR_LENGTH(`class_authority_agent1`.`abbreviation`), CONCAT_WS('',   `class_authority_agent1`.`abbreviation`), '') /* Authority organization */" => "Authority organization"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS=array(   
		"`biblio_author`.`id`" => "id",
		"`biblio_author`.`memberID`" => "memberID",
		"`biblio_author`.`groupID`" => "groupID",
		"`biblio_author`.`selection_class`" => "selection_class",
		"IF(    CHAR_LENGTH(`class_agent_type11`.`type`), CONCAT_WS('',   `class_agent_type11`.`type`), '') /* Agent category */" => "agenttype1",
		"IF(    CHAR_LENGTH(`class_agent_type21`.`type`), CONCAT_WS('',   `class_agent_type21`.`type`), '') /* Agent group */" => "agenttype2",
		"`biblio_author`.`gender`" => "gender",
		"`biblio_author`.`last_name`" => "last_name",
		"`biblio_author`.`first_name`" => "first_name",
		"`biblio_author`.`other_name`" => "other_name",
		"`biblio_author`.`birthday`" => "birthday",
		"`biblio_author`.`birth_location`" => "birth_location",
		"`biblio_author`.`deathday`" => "deathday",
		"`biblio_author`.`death_location`" => "death_location",
		"`biblio_author`.`workplace`" => "workplace",
		"`biblio_author`.`knows`" => "knows",
		"`biblio_author`.`shortbio`" => "shortbio",
		"`biblio_author`.`data_evaluation`" => "data_evaluation",
		"`biblio_author`.`authority_record`" => "authority_record",
		"IF(    CHAR_LENGTH(`class_authority_agent1`.`abbreviation`), CONCAT_WS('',   `class_authority_agent1`.`abbreviation`), '') /* Authority organization */" => "authority_organization"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'agenttype1' => 'Agent category', 'agenttype2' => 'Agent group', 'authority_organization' => 'Authority organization');

	$x->QueryFrom="`biblio_author` LEFT JOIN `class_agent_type1` as class_agent_type11 ON `class_agent_type11`.`id`=`biblio_author`.`agenttype1` LEFT JOIN `class_agent_type2` as class_agent_type21 ON `class_agent_type21`.`id`=`biblio_author`.`agenttype2` LEFT JOIN `class_authority_agent` as class_authority_agent1 ON `class_authority_agent1`.`id`=`biblio_author`.`authority_organization` ";
	$x->QueryWhere='';
	$x->QueryOrder='';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "biblio_author_view.php";
	$x->RedirectAfterInsert = "biblio_author_view.php?SelectedID=#ID#";
	$x->TableTitle = "Agents";
	$x->TableIcon = "table.gif";
	$x->PrimaryKey = "`biblio_author`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("MemberID", "Img", "Gender", "Last name", "First name", "Date of birth");
	$x->ColFieldName = array('memberID', 'img', 'gender', 'last_name', 'first_name', 'birthday');
	$x->ColNumber  = array(2, 3, 8, 9, 10, 12);

	$x->Template = 'templates/biblio_author_templateTV.html';
	$x->SelectedTemplate = 'templates/biblio_author_templateTVS.html';
	$x->ShowTableHeader = 1;
	$x->ShowRecordSlots = 0;
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `biblio_author`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='biblio_author' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `biblio_author`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='biblio_author' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`biblio_author`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: biblio_author_init
	$render=TRUE;
	if(function_exists('biblio_author_init')){
		$args=array();
		$render=biblio_author_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: biblio_author_header
	$headerCode='';
	if(function_exists('biblio_author_header')){
		$args=array();
		$headerCode=biblio_author_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: biblio_author_footer
	$footerCode='';
	if(function_exists('biblio_author_footer')){
		$args=array();
		$footerCode=biblio_author_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>