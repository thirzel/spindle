<?php
// This script and data application were generated by AppGini 5.31
// Download AppGini for free from http://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/story_characters.php");
	include("$currDir/story_characters_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('story_characters');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "story_characters";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV=array(   
		"`story_characters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "story",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`), '') /* Role */" => "role",
		"`story_characters`.`character`" => "character",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent */" => "memberID",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Agent\'s name */" => "agent_name",
		"`story_characters`.`cw_name`" => "cw_name",
		"IF(    CHAR_LENGTH(`biblio_author1`.`img`), CONCAT_WS('',   `biblio_author1`.`img`), '') /* Image */" => "img",
		"`story_characters`.`MC_resolve`" => "MC_resolve",
		"`story_characters`.`MC_growth`" => "MC_growth",
		"`story_characters`.`MC_approach`" => "MC_approach",
		"`story_characters`.`MC_PS_style`" => "MC_PS_style",
		"`story_characters`.`cw_age`" => "cw_age",
		"`story_characters`.`cw_gender`" => "cw_gender",
		"`story_characters`.`cw_communication_style`" => "cw_communication_style",
		"`story_characters`.`cw_background`" => "cw_background",
		"`story_characters`.`cw_appearance`" => "cw_appearance",
		"`story_characters`.`cw_relationships`" => "cw_relationships",
		"`story_characters`.`cw_ambition`" => "cw_ambition",
		"`story_characters`.`cw_character_defects`" => "cw_character_defects",
		"`story_characters`.`cw_thoughts`" => "cw_thoughts",
		"`story_characters`.`cw_relatedness`" => "cw_relatedness",
		"`story_characters`.`cw_restrictions`" => "cw_restrictions",
		"`story_characters`.`locations`" => "locations",
		"`story_characters`.`persons`" => "persons",
		"`story_characters`.`events`" => "events",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Main tragic triad */" => "noetictension",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* General impression management */" => "impression"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`story_characters`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => '`story_characters`.`MC_resolve`',
		10 => '`story_characters`.`MC_growth`',
		11 => '`story_characters`.`MC_approach`',
		12 => '`story_characters`.`MC_PS_style`',
		13 => 13,
		14 => '`story_characters`.`cw_gender`',
		15 => 15,
		16 => 16,
		17 => 17,
		18 => 18,
		19 => 19,
		20 => 20,
		21 => 21,
		22 => 22,
		23 => 23,
		24 => 24,
		25 => 25,
		26 => 26,
		27 => 27,
		28 => 28
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV=array(   
		"`story_characters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "story",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`), '') /* Role */" => "role",
		"`story_characters`.`character`" => "character",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent */" => "memberID",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Agent\'s name */" => "agent_name",
		"`story_characters`.`cw_name`" => "cw_name",
		"IF(    CHAR_LENGTH(`biblio_author1`.`img`), CONCAT_WS('',   `biblio_author1`.`img`), '') /* Image */" => "img",
		"`story_characters`.`MC_resolve`" => "MC_resolve",
		"`story_characters`.`MC_growth`" => "MC_growth",
		"`story_characters`.`MC_approach`" => "MC_approach",
		"`story_characters`.`MC_PS_style`" => "MC_PS_style",
		"`story_characters`.`cw_age`" => "cw_age",
		"`story_characters`.`cw_gender`" => "cw_gender",
		"`story_characters`.`cw_communication_style`" => "cw_communication_style",
		"`story_characters`.`cw_background`" => "cw_background",
		"`story_characters`.`cw_appearance`" => "cw_appearance",
		"`story_characters`.`cw_relationships`" => "cw_relationships",
		"`story_characters`.`cw_ambition`" => "cw_ambition",
		"`story_characters`.`cw_character_defects`" => "cw_character_defects",
		"`story_characters`.`cw_thoughts`" => "cw_thoughts",
		"`story_characters`.`cw_relatedness`" => "cw_relatedness",
		"`story_characters`.`cw_restrictions`" => "cw_restrictions",
		"`story_characters`.`locations`" => "locations",
		"`story_characters`.`persons`" => "persons",
		"`story_characters`.`events`" => "events",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Main tragic triad */" => "noetictension",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* General impression management */" => "impression"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters=array(   
		"`story_characters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "Story",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`), '') /* Role */" => "Role",
		"`story_characters`.`character`" => "Character type",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent */" => "Agent",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Agent\'s name */" => "Agent\'s name",
		"`story_characters`.`cw_name`" => "Character name",
		"IF(    CHAR_LENGTH(`biblio_author1`.`img`), CONCAT_WS('',   `biblio_author1`.`img`), '') /* Image */" => "Image",
		"`story_characters`.`MC_resolve`" => "Character resolve",
		"`story_characters`.`MC_growth`" => "Character growth",
		"`story_characters`.`MC_approach`" => "Character approach",
		"`story_characters`.`MC_PS_style`" => "Character problem solving style",
		"`story_characters`.`cw_age`" => "Age",
		"`story_characters`.`cw_gender`" => "Gender",
		"`story_characters`.`cw_communication_style`" => "Communication style",
		"`story_characters`.`cw_background`" => "Background",
		"`story_characters`.`cw_appearance`" => "Appearance",
		"`story_characters`.`cw_relationships`" => "Relationships",
		"`story_characters`.`cw_ambition`" => "Ambition",
		"`story_characters`.`cw_character_defects`" => "Defects",
		"`story_characters`.`cw_thoughts`" => "Thoughts",
		"`story_characters`.`cw_relatedness`" => "Relatedness",
		"`story_characters`.`cw_restrictions`" => "Restrictions",
		"`story_characters`.`locations`" => "Locations",
		"`story_characters`.`persons`" => "Related persons",
		"`story_characters`.`events`" => "Events",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Main tragic triad */" => "Main tragic triad",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* General impression management */" => "General impression management"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS=array(   
		"`story_characters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "story",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`), '') /* Role */" => "role",
		"`story_characters`.`character`" => "character",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent */" => "memberID",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Agent\'s name */" => "agent_name",
		"`story_characters`.`cw_name`" => "cw_name",
		"IF(    CHAR_LENGTH(`biblio_author1`.`img`), CONCAT_WS('',   `biblio_author1`.`img`), '') /* Image */" => "img",
		"`story_characters`.`MC_resolve`" => "MC_resolve",
		"`story_characters`.`MC_growth`" => "MC_growth",
		"`story_characters`.`MC_approach`" => "MC_approach",
		"`story_characters`.`MC_PS_style`" => "MC_PS_style",
		"`story_characters`.`cw_age`" => "cw_age",
		"`story_characters`.`cw_gender`" => "cw_gender",
		"`story_characters`.`cw_communication_style`" => "cw_communication_style",
		"`story_characters`.`cw_background`" => "cw_background",
		"`story_characters`.`cw_appearance`" => "cw_appearance",
		"`story_characters`.`cw_relationships`" => "cw_relationships",
		"`story_characters`.`cw_ambition`" => "cw_ambition",
		"`story_characters`.`cw_character_defects`" => "cw_character_defects",
		"`story_characters`.`cw_thoughts`" => "cw_thoughts",
		"`story_characters`.`cw_relatedness`" => "cw_relatedness",
		"`story_characters`.`cw_restrictions`" => "cw_restrictions",
		"`story_characters`.`locations`" => "locations",
		"`story_characters`.`persons`" => "persons",
		"`story_characters`.`events`" => "events",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Main tragic triad */" => "noetictension",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* General impression management */" => "impression"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'story' => 'Story', 'role' => 'Role', 'agent_name' => 'Agent\'s name', 'noetictension' => 'Main tragic triad', 'impression' => 'General impression management');

	$x->QueryFrom="`story_characters` LEFT JOIN `story` as story1 ON `story1`.`id`=`story_characters`.`story` LEFT JOIN `class_dramatica_archetype` as class_dramatica_archetype1 ON `class_dramatica_archetype1`.`id`=`story_characters`.`role` LEFT JOIN `biblio_author` as biblio_author1 ON `biblio_author1`.`id`=`story_characters`.`agent_name` LEFT JOIN `class_nt` as class_nt1 ON `class_nt1`.`id`=`story_characters`.`noetictension` LEFT JOIN `class_im` as class_im1 ON `class_im1`.`id`=`story_characters`.`impression` ";
	$x->QueryWhere='';
	$x->QueryOrder='';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "story_characters_view.php";
	$x->RedirectAfterInsert = "story_characters_view.php";
	$x->TableTitle = "Characters";
	$x->TableIcon = "table.gif";
	$x->PrimaryKey = "`story_characters`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("id", "Story", "Role", "Character type", "Agent", "Agent's name", "Character name", "Image");
	$x->ColFieldName = array('id', 'story', 'role', 'character', 'memberID', 'agent_name', 'cw_name', 'img');
	$x->ColNumber  = array(1, 2, 3, 4, 5, 6, 7, 8);

	$x->Template = 'templates/story_characters_templateTV.html';
	$x->SelectedTemplate = 'templates/story_characters_templateTVS.html';
	$x->ShowTableHeader = 1;
	$x->ShowRecordSlots = 0;
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `story_characters`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='story_characters' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `story_characters`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='story_characters' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`story_characters`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: story_characters_init
	$render=TRUE;
	if(function_exists('story_characters_init')){
		$args=array();
		$render=story_characters_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: story_characters_header
	$headerCode='';
	if(function_exists('story_characters_header')){
		$args=array();
		$headerCode=story_characters_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: story_characters_footer
	$footerCode='';
	if(function_exists('story_characters_footer')){
		$args=array();
		$footerCode=story_characters_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>