<?php
// This script and data application were generated by AppGini 5.31
// Download AppGini for free from http://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/code_encounters.php");
	include("$currDir/code_encounters_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('code_encounters');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "code_encounters";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV=array(   
		"`code_encounters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent A */" => "agentA",
		"IF(    CHAR_LENGTH(`biblio_author2`.`memberID`), CONCAT_WS('',   `biblio_author2`.`memberID`), '') /* Author A */" => "authorA",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '  ', `biblio_doc1`.`title`), '') /* Bibliography A */" => "bibliographyA",
		"IF(    CHAR_LENGTH(`biblio_trascript1`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript1`.`transcript_title`), CONCAT_WS('',   `biblio_trascript1`.`trascriber_memberID`, ' - ', `biblio_trascript1`.`transcript_title`), '') /* Transcript A */" => "transcriptA",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token_sequence`) || CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token_sequence`, '  ', `biblio_token1`.`token`), '') /* Token A */" => "tokenA",
		"IF(    CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounter_scenes1`.`scene`), '') /* Scene A */" => "sceneA",
		"IF(    CHAR_LENGTH(`biblio_author3`.`memberID`), CONCAT_WS('',   `biblio_author3`.`memberID`), '') /* Agent B */" => "agentB",
		"IF(    CHAR_LENGTH(`biblio_author4`.`memberID`), CONCAT_WS('',   `biblio_author4`.`memberID`), '') /* Author B */" => "authorB",
		"IF(    CHAR_LENGTH(`biblio_doc2`.`id`) || CHAR_LENGTH(`biblio_doc2`.`title`), CONCAT_WS('',   `biblio_doc2`.`id`, '  ', `biblio_doc2`.`title`), '') /* Bibliography B */" => "bibliographyB",
		"IF(    CHAR_LENGTH(`biblio_trascript2`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript2`.`transcript_title`), CONCAT_WS('',   `biblio_trascript2`.`trascriber_memberID`, ' - ', `biblio_trascript2`.`transcript_title`), '') /* Transcript B */" => "transcriptB",
		"IF(    CHAR_LENGTH(`biblio_token2`.`id`) || CHAR_LENGTH(`biblio_token2`.`token`), CONCAT_WS('',   `biblio_token2`.`id`, '  ', `biblio_token2`.`token`), '') /* Token B */" => "tokenB",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, '  '), '') /* Scene B */" => "sceneB",
		"`code_encounters`.`type`" => "type",
		"`code_encounters`.`conflicttype`" => "conflicttype",
		"IF(    CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes3`.`scene`), '') /* Story Scene */" => "story_scene",
		"`code_encounters`.`nd_color`" => "nd_color",
		"`code_encounters`.`nd_width`" => "nd_width",
		"`code_encounters`.`nd_style`" => "nd_style",
		"`code_encounters`.`nd_opacity`" => "nd_opacity",
		"`code_encounters`.`nd_visibility`" => "nd_visibility",
		"`code_encounters`.`lbl_lable`" => "lbl_lable",
		"`code_encounters`.`lbl_color`" => "lbl_color",
		"`code_encounters`.`lbl_size`" => "lbl_size"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`code_encounters`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
		13 => 13,
		14 => 14,
		15 => 15,
		16 => 16,
		17 => '`code_encounters`.`nd_color`',
		18 => 18,
		19 => 19,
		20 => 20,
		21 => 21,
		22 => 22,
		23 => 23,
		24 => 24
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV=array(   
		"`code_encounters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent A */" => "agentA",
		"IF(    CHAR_LENGTH(`biblio_author2`.`memberID`), CONCAT_WS('',   `biblio_author2`.`memberID`), '') /* Author A */" => "authorA",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '  ', `biblio_doc1`.`title`), '') /* Bibliography A */" => "bibliographyA",
		"IF(    CHAR_LENGTH(`biblio_trascript1`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript1`.`transcript_title`), CONCAT_WS('',   `biblio_trascript1`.`trascriber_memberID`, ' - ', `biblio_trascript1`.`transcript_title`), '') /* Transcript A */" => "transcriptA",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token_sequence`) || CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token_sequence`, '  ', `biblio_token1`.`token`), '') /* Token A */" => "tokenA",
		"IF(    CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounter_scenes1`.`scene`), '') /* Scene A */" => "sceneA",
		"IF(    CHAR_LENGTH(`biblio_author3`.`memberID`), CONCAT_WS('',   `biblio_author3`.`memberID`), '') /* Agent B */" => "agentB",
		"IF(    CHAR_LENGTH(`biblio_author4`.`memberID`), CONCAT_WS('',   `biblio_author4`.`memberID`), '') /* Author B */" => "authorB",
		"IF(    CHAR_LENGTH(`biblio_doc2`.`id`) || CHAR_LENGTH(`biblio_doc2`.`title`), CONCAT_WS('',   `biblio_doc2`.`id`, '  ', `biblio_doc2`.`title`), '') /* Bibliography B */" => "bibliographyB",
		"IF(    CHAR_LENGTH(`biblio_trascript2`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript2`.`transcript_title`), CONCAT_WS('',   `biblio_trascript2`.`trascriber_memberID`, ' - ', `biblio_trascript2`.`transcript_title`), '') /* Transcript B */" => "transcriptB",
		"IF(    CHAR_LENGTH(`biblio_token2`.`id`) || CHAR_LENGTH(`biblio_token2`.`token`), CONCAT_WS('',   `biblio_token2`.`id`, '  ', `biblio_token2`.`token`), '') /* Token B */" => "tokenB",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, '  '), '') /* Scene B */" => "sceneB",
		"`code_encounters`.`type`" => "type",
		"`code_encounters`.`conflicttype`" => "conflicttype",
		"IF(    CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes3`.`scene`), '') /* Story Scene */" => "story_scene",
		"`code_encounters`.`nd_color`" => "nd_color",
		"`code_encounters`.`nd_width`" => "nd_width",
		"`code_encounters`.`nd_style`" => "nd_style",
		"`code_encounters`.`nd_opacity`" => "nd_opacity",
		"`code_encounters`.`nd_visibility`" => "nd_visibility",
		"`code_encounters`.`lbl_lable`" => "lbl_lable",
		"`code_encounters`.`lbl_color`" => "lbl_color",
		"`code_encounters`.`lbl_size`" => "lbl_size"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters=array(   
		"`code_encounters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent A */" => "Agent A",
		"IF(    CHAR_LENGTH(`biblio_author2`.`memberID`), CONCAT_WS('',   `biblio_author2`.`memberID`), '') /* Author A */" => "Author A",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '  ', `biblio_doc1`.`title`), '') /* Bibliography A */" => "Bibliography A",
		"IF(    CHAR_LENGTH(`biblio_trascript1`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript1`.`transcript_title`), CONCAT_WS('',   `biblio_trascript1`.`trascriber_memberID`, ' - ', `biblio_trascript1`.`transcript_title`), '') /* Transcript A */" => "Transcript A",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token_sequence`) || CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token_sequence`, '  ', `biblio_token1`.`token`), '') /* Token A */" => "Token A",
		"IF(    CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounter_scenes1`.`scene`), '') /* Scene A */" => "Scene A",
		"IF(    CHAR_LENGTH(`biblio_author3`.`memberID`), CONCAT_WS('',   `biblio_author3`.`memberID`), '') /* Agent B */" => "Agent B",
		"IF(    CHAR_LENGTH(`biblio_author4`.`memberID`), CONCAT_WS('',   `biblio_author4`.`memberID`), '') /* Author B */" => "Author B",
		"IF(    CHAR_LENGTH(`biblio_doc2`.`id`) || CHAR_LENGTH(`biblio_doc2`.`title`), CONCAT_WS('',   `biblio_doc2`.`id`, '  ', `biblio_doc2`.`title`), '') /* Bibliography B */" => "Bibliography B",
		"IF(    CHAR_LENGTH(`biblio_trascript2`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript2`.`transcript_title`), CONCAT_WS('',   `biblio_trascript2`.`trascriber_memberID`, ' - ', `biblio_trascript2`.`transcript_title`), '') /* Transcript B */" => "Transcript B",
		"IF(    CHAR_LENGTH(`biblio_token2`.`id`) || CHAR_LENGTH(`biblio_token2`.`token`), CONCAT_WS('',   `biblio_token2`.`id`, '  ', `biblio_token2`.`token`), '') /* Token B */" => "Token B",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, '  '), '') /* Scene B */" => "Scene B",
		"`code_encounters`.`type`" => "Interaction type",
		"`code_encounters`.`conflicttype`" => "Conflict type",
		"IF(    CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes3`.`scene`), '') /* Story Scene */" => "Story Scene",
		"`code_encounters`.`nd_color`" => "nd_color",
		"`code_encounters`.`nd_width`" => "nd_width",
		"`code_encounters`.`nd_style`" => "nd_style",
		"`code_encounters`.`nd_opacity`" => "nd_opacity",
		"`code_encounters`.`nd_visibility`" => "nd_visibility",
		"`code_encounters`.`lbl_lable`" => "lbl_lable",
		"`code_encounters`.`lbl_color`" => "lbl_color",
		"`code_encounters`.`lbl_size`" => "lbl_size"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS=array(   
		"`code_encounters`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`memberID`), '') /* Agent A */" => "agentA",
		"IF(    CHAR_LENGTH(`biblio_author2`.`memberID`), CONCAT_WS('',   `biblio_author2`.`memberID`), '') /* Author A */" => "authorA",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '  ', `biblio_doc1`.`title`), '') /* Bibliography A */" => "bibliographyA",
		"IF(    CHAR_LENGTH(`biblio_trascript1`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript1`.`transcript_title`), CONCAT_WS('',   `biblio_trascript1`.`trascriber_memberID`, ' - ', `biblio_trascript1`.`transcript_title`), '') /* Transcript A */" => "transcriptA",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token_sequence`) || CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token_sequence`, '  ', `biblio_token1`.`token`), '') /* Token A */" => "tokenA",
		"IF(    CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounter_scenes1`.`scene`), '') /* Scene A */" => "sceneA",
		"IF(    CHAR_LENGTH(`biblio_author3`.`memberID`), CONCAT_WS('',   `biblio_author3`.`memberID`), '') /* Agent B */" => "agentB",
		"IF(    CHAR_LENGTH(`biblio_author4`.`memberID`), CONCAT_WS('',   `biblio_author4`.`memberID`), '') /* Author B */" => "authorB",
		"IF(    CHAR_LENGTH(`biblio_doc2`.`id`) || CHAR_LENGTH(`biblio_doc2`.`title`), CONCAT_WS('',   `biblio_doc2`.`id`, '  ', `biblio_doc2`.`title`), '') /* Bibliography B */" => "bibliographyB",
		"IF(    CHAR_LENGTH(`biblio_trascript2`.`trascriber_memberID`) || CHAR_LENGTH(`biblio_trascript2`.`transcript_title`), CONCAT_WS('',   `biblio_trascript2`.`trascriber_memberID`, ' - ', `biblio_trascript2`.`transcript_title`), '') /* Transcript B */" => "transcriptB",
		"IF(    CHAR_LENGTH(`biblio_token2`.`id`) || CHAR_LENGTH(`biblio_token2`.`token`), CONCAT_WS('',   `biblio_token2`.`id`, '  ', `biblio_token2`.`token`), '') /* Token B */" => "tokenB",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, '  '), '') /* Scene B */" => "sceneB",
		"`code_encounters`.`type`" => "type",
		"`code_encounters`.`conflicttype`" => "conflicttype",
		"IF(    CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes3`.`scene`), '') /* Story Scene */" => "story_scene",
		"`code_encounters`.`nd_color`" => "nd_color",
		"`code_encounters`.`nd_width`" => "nd_width",
		"`code_encounters`.`nd_style`" => "nd_style",
		"`code_encounters`.`nd_opacity`" => "nd_opacity",
		"`code_encounters`.`nd_visibility`" => "nd_visibility",
		"`code_encounters`.`lbl_lable`" => "lbl_lable",
		"`code_encounters`.`lbl_color`" => "lbl_color",
		"`code_encounters`.`lbl_size`" => "lbl_size"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'agentA' => 'Agent A', 'authorA' => 'Author A', 'bibliographyA' => 'Bibliography A', 'transcriptA' => 'Transcript A', 'tokenA' => 'Token A', 'sceneA' => 'Scene A', 'agentB' => 'Agent B', 'authorB' => 'Author B', 'bibliographyB' => 'Bibliography B', 'transcriptB' => 'Transcript B', 'tokenB' => 'Token B', 'sceneB' => 'Scene B', 'story_scene' => 'Story Scene');

	$x->QueryFrom="`code_encounters` LEFT JOIN `biblio_author` as biblio_author1 ON `biblio_author1`.`id`=`code_encounters`.`agentA` LEFT JOIN `biblio_author` as biblio_author2 ON `biblio_author2`.`id`=`code_encounters`.`authorA` LEFT JOIN `biblio_doc` as biblio_doc1 ON `biblio_doc1`.`id`=`code_encounters`.`bibliographyA` LEFT JOIN `biblio_trascript` as biblio_trascript1 ON `biblio_trascript1`.`id`=`code_encounters`.`transcriptA` LEFT JOIN `biblio_token` as biblio_token1 ON `biblio_token1`.`id`=`code_encounters`.`tokenA` LEFT JOIN `code_encounter_scenes` as code_encounter_scenes1 ON `code_encounter_scenes1`.`id`=`code_encounters`.`sceneA` LEFT JOIN `biblio_author` as biblio_author3 ON `biblio_author3`.`id`=`code_encounters`.`agentB` LEFT JOIN `biblio_author` as biblio_author4 ON `biblio_author4`.`id`=`code_encounters`.`authorB` LEFT JOIN `biblio_doc` as biblio_doc2 ON `biblio_doc2`.`id`=`code_encounters`.`bibliographyB` LEFT JOIN `biblio_trascript` as biblio_trascript2 ON `biblio_trascript2`.`id`=`code_encounters`.`transcriptB` LEFT JOIN `biblio_token` as biblio_token2 ON `biblio_token2`.`id`=`code_encounters`.`tokenB` LEFT JOIN `code_encounter_scenes` as code_encounter_scenes2 ON `code_encounter_scenes2`.`id`=`code_encounters`.`sceneB` LEFT JOIN `code_encounter_scenes` as code_encounter_scenes3 ON `code_encounter_scenes3`.`id`=`code_encounters`.`story_scene` ";
	$x->QueryWhere='';
	$x->QueryOrder='';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "code_encounters_view.php";
	$x->RedirectAfterInsert = "code_encounters_view.php";
	$x->TableTitle = "Encounters";
	$x->TableIcon = "table.gif";
	$x->PrimaryKey = "`code_encounters`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("id", "Agent A", "Agent B", "Interaction type", "Conflict type", "Story Scene");
	$x->ColFieldName = array('id', 'agentA', 'agentB', 'type', 'conflicttype', 'story_scene');
	$x->ColNumber  = array(1, 2, 8, 14, 15, 16);

	$x->Template = 'templates/code_encounters_templateTV.html';
	$x->SelectedTemplate = 'templates/code_encounters_templateTVS.html';
	$x->ShowTableHeader = 1;
	$x->ShowRecordSlots = 0;
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `code_encounters`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='code_encounters' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `code_encounters`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='code_encounters' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`code_encounters`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: code_encounters_init
	$render=TRUE;
	if(function_exists('code_encounters_init')){
		$args=array();
		$render=code_encounters_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: code_encounters_header
	$headerCode='';
	if(function_exists('code_encounters_header')){
		$args=array();
		$headerCode=code_encounters_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: code_encounters_footer
	$footerCode='';
	if(function_exists('code_encounters_footer')){
		$args=array();
		$footerCode=code_encounters_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>