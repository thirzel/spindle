<?php

// Data functions for table storylines

// This script and data application were generated by AppGini 5.31
// Download AppGini for free from http://bigprof.com/appgini/download/

function storylines_insert(){
	global $Translation;

	if($_GET['insert_x']!=''){$_POST=$_GET;}

	// mm: can member insert record?
	$arrPerm=getTablePermissions('storylines');
	if(!$arrPerm[1]){
		return false;
	}

	$data['story'] = makeSafe($_POST['story']);
		if($data['story'] == empty_lookup_value){ $data['story'] = ''; }
	$data['story_act'] = makeSafe($_POST['story_act']);
		if($data['story_act'] == empty_lookup_value){ $data['story_act'] = ''; }
	$data['storyweaving_scene_no'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_scene_no'] == empty_lookup_value){ $data['storyweaving_scene_no'] = ''; }
	$data['storyweaving_scene'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_scene'] == empty_lookup_value){ $data['storyweaving_scene'] = ''; }
	$data['storyweaving_sequence'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_sequence'] == empty_lookup_value){ $data['storyweaving_sequence'] = ''; }
	$data['storyweaving_theme'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_theme'] == empty_lookup_value){ $data['storyweaving_theme'] = ''; }
	$data['role'] = makeSafe($_POST['role']);
		if($data['role'] == empty_lookup_value){ $data['role'] = ''; }
	$data['character'] = makeSafe($_POST['character']);
		if($data['character'] == empty_lookup_value){ $data['character'] = ''; }
	$data['characterevent_scene'] = makeSafe($_POST['characterevent_scene']);
		if($data['characterevent_scene'] == empty_lookup_value){ $data['characterevent_scene'] = ''; }
	$data['character_event'] = makeSafe($_POST['characterevent_scene']);
		if($data['character_event'] == empty_lookup_value){ $data['character_event'] = ''; }
	$data['storyline_no'] = makeSafe($_POST['storyline_no']);
		if($data['storyline_no'] == empty_lookup_value){ $data['storyline_no'] = ''; }
	$data['storyline'] = br2nl(makeSafe($_POST['storyline']));

	// hook: storylines_before_insert
	if(function_exists('storylines_before_insert')){
		$args=array();
		if(!storylines_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('insert into `storylines` set       `story`=' . (($data['story'] !== '' && $data['story'] !== NULL) ? "'{$data['story']}'" : 'NULL') . ', `story_act`=' . (($data['story_act'] !== '' && $data['story_act'] !== NULL) ? "'{$data['story_act']}'" : 'NULL') . ', `storyweaving_scene_no`=' . (($data['storyweaving_scene_no'] !== '' && $data['storyweaving_scene_no'] !== NULL) ? "'{$data['storyweaving_scene_no']}'" : 'NULL') . ', `storyweaving_scene`=' . (($data['storyweaving_scene'] !== '' && $data['storyweaving_scene'] !== NULL) ? "'{$data['storyweaving_scene']}'" : 'NULL') . ', `storyweaving_sequence`=' . (($data['storyweaving_sequence'] !== '' && $data['storyweaving_sequence'] !== NULL) ? "'{$data['storyweaving_sequence']}'" : 'NULL') . ', `storyweaving_theme`=' . (($data['storyweaving_theme'] !== '' && $data['storyweaving_theme'] !== NULL) ? "'{$data['storyweaving_theme']}'" : 'NULL') . ', `role`=' . (($data['role'] !== '' && $data['role'] !== NULL) ? "'{$data['role']}'" : 'NULL') . ', `character`=' . (($data['character'] !== '' && $data['character'] !== NULL) ? "'{$data['character']}'" : 'NULL') . ', `characterevent_scene`=' . (($data['characterevent_scene'] !== '' && $data['characterevent_scene'] !== NULL) ? "'{$data['characterevent_scene']}'" : 'NULL') . ', `character_event`=' . (($data['character_event'] !== '' && $data['character_event'] !== NULL) ? "'{$data['character_event']}'" : 'NULL') . ', `storyline_no`=' . (($data['storyline_no'] !== '' && $data['storyline_no'] !== NULL) ? "'{$data['storyline_no']}'" : 'NULL') . ', `storyline`=' . (($data['storyline'] !== '' && $data['storyline'] !== NULL) ? "'{$data['storyline']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"storylines_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID=db_insert_id(db_link());

	// hook: storylines_after_insert
	if(function_exists('storylines_after_insert')){
		$res = sql("select * from `storylines` where `id`='" . makeSafe($recID) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID);
		$args=array();
		if(!storylines_after_insert($data, getMemberInfo(), $args)){ return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID); }
	}

	// mm: save ownership data
	sql("insert into membership_userrecords set tableName='storylines', pkValue='$recID', memberID='".getLoggedMemberID()."', dateAdded='".time()."', dateUpdated='".time()."', groupID='".getLoggedGroupID()."'", $eo);

	return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID);
}

function storylines_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('storylines');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='storylines' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='storylines' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: storylines_before_delete
	if(function_exists('storylines_before_delete')){
		$args=array();
		if(!storylines_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `storylines` where `id`='$selected_id'", $eo);

	// hook: storylines_after_delete
	if(function_exists('storylines_after_delete')){
		$args=array();
		storylines_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='storylines' and pkValue='$selected_id'", $eo);
}

function storylines_update($selected_id){
	global $Translation;

	if($_GET['update_x']!=''){$_POST=$_GET;}

	// mm: can member edit record?
	$arrPerm=getTablePermissions('storylines');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='storylines' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='storylines' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['story'] = makeSafe($_POST['story']);
		if($data['story'] == empty_lookup_value){ $data['story'] = ''; }
	$data['story_act'] = makeSafe($_POST['story_act']);
		if($data['story_act'] == empty_lookup_value){ $data['story_act'] = ''; }
	$data['storyweaving_scene_no'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_scene_no'] == empty_lookup_value){ $data['storyweaving_scene_no'] = ''; }
	$data['storyweaving_scene'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_scene'] == empty_lookup_value){ $data['storyweaving_scene'] = ''; }
	$data['storyweaving_sequence'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_sequence'] == empty_lookup_value){ $data['storyweaving_sequence'] = ''; }
	$data['storyweaving_theme'] = makeSafe($_POST['storyweaving_scene_no']);
		if($data['storyweaving_theme'] == empty_lookup_value){ $data['storyweaving_theme'] = ''; }
	$data['role'] = makeSafe($_POST['role']);
		if($data['role'] == empty_lookup_value){ $data['role'] = ''; }
	$data['character'] = makeSafe($_POST['character']);
		if($data['character'] == empty_lookup_value){ $data['character'] = ''; }
	$data['characterevent_scene'] = makeSafe($_POST['characterevent_scene']);
		if($data['characterevent_scene'] == empty_lookup_value){ $data['characterevent_scene'] = ''; }
	$data['character_event'] = makeSafe($_POST['characterevent_scene']);
		if($data['character_event'] == empty_lookup_value){ $data['character_event'] = ''; }
	$data['storyline_no'] = makeSafe($_POST['storyline_no']);
		if($data['storyline_no'] == empty_lookup_value){ $data['storyline_no'] = ''; }
	$data['storyline'] = br2nl(makeSafe($_POST['storyline']));
	$data['selectedID']=makeSafe($selected_id);

	// hook: storylines_before_update
	if(function_exists('storylines_before_update')){
		$args=array();
		if(!storylines_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `storylines` set       `story`=' . (($data['story'] !== '' && $data['story'] !== NULL) ? "'{$data['story']}'" : 'NULL') . ', `story_act`=' . (($data['story_act'] !== '' && $data['story_act'] !== NULL) ? "'{$data['story_act']}'" : 'NULL') . ', `storyweaving_scene_no`=' . (($data['storyweaving_scene_no'] !== '' && $data['storyweaving_scene_no'] !== NULL) ? "'{$data['storyweaving_scene_no']}'" : 'NULL') . ', `storyweaving_scene`=' . (($data['storyweaving_scene'] !== '' && $data['storyweaving_scene'] !== NULL) ? "'{$data['storyweaving_scene']}'" : 'NULL') . ', `storyweaving_sequence`=' . (($data['storyweaving_sequence'] !== '' && $data['storyweaving_sequence'] !== NULL) ? "'{$data['storyweaving_sequence']}'" : 'NULL') . ', `storyweaving_theme`=' . (($data['storyweaving_theme'] !== '' && $data['storyweaving_theme'] !== NULL) ? "'{$data['storyweaving_theme']}'" : 'NULL') . ', `role`=' . (($data['role'] !== '' && $data['role'] !== NULL) ? "'{$data['role']}'" : 'NULL') . ', `character`=' . (($data['character'] !== '' && $data['character'] !== NULL) ? "'{$data['character']}'" : 'NULL') . ', `characterevent_scene`=' . (($data['characterevent_scene'] !== '' && $data['characterevent_scene'] !== NULL) ? "'{$data['characterevent_scene']}'" : 'NULL') . ', `character_event`=' . (($data['character_event'] !== '' && $data['character_event'] !== NULL) ? "'{$data['character_event']}'" : 'NULL') . ', `storyline_no`=' . (($data['storyline_no'] !== '' && $data['storyline_no'] !== NULL) ? "'{$data['storyline_no']}'" : 'NULL') . ', `storyline`=' . (($data['storyline'] !== '' && $data['storyline'] !== NULL) ? "'{$data['storyline']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="storylines_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: storylines_after_update
	if(function_exists('storylines_after_update')){
		$res = sql("SELECT * FROM `storylines` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!storylines_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='storylines' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function storylines_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('storylines');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_story = thisOr(undo_magic_quotes($_REQUEST['filterer_story']), '');
	$filterer_storyweaving_scene_no = thisOr(undo_magic_quotes($_REQUEST['filterer_storyweaving_scene_no']), '');
	$filterer_role = thisOr(undo_magic_quotes($_REQUEST['filterer_role']), '');
	$filterer_character = thisOr(undo_magic_quotes($_REQUEST['filterer_character']), '');
	$filterer_characterevent_scene = thisOr(undo_magic_quotes($_REQUEST['filterer_characterevent_scene']), '');

	// populate filterers, starting from children to grand-parents
	if($filterer_storyweaving_scene_no && !$filterer_story) $filterer_story = sqlValue("select story from storyweaving_scenes where id='" . makeSafe($filterer_storyweaving_scene_no) . "'");
	if($filterer_role && !$filterer_story) $filterer_story = sqlValue("select  from class_dramatica_archetype where id='" . makeSafe($filterer_role) . "'");
	if($filterer_character && !$filterer_story) $filterer_story = sqlValue("select story from story_characters where id='" . makeSafe($filterer_character) . "'");
	if($filterer_character && !$filterer_role) $filterer_role = sqlValue("select role from story_characters where id='" . makeSafe($filterer_character) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: story
	$combo_story = new DataCombo;
	// combobox: story_act
	$combo_story_act = new Combo;
	$combo_story_act->ListType = 0;
	$combo_story_act->MultipleSeparator = ', ';
	$combo_story_act->ListBoxHeight = 10;
	$combo_story_act->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/storylines.story_act.csv')){
		$story_act_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/storylines.story_act.csv')));
		$combo_story_act->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($story_act_data)));
		$combo_story_act->ListData = $combo_story_act->ListItem;
	}else{
		$combo_story_act->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("ACT I;; ACT II;; ACT III;; ACT IV")));
		$combo_story_act->ListData = $combo_story_act->ListItem;
	}
	$combo_story_act->SelectName = 'story_act';
	// combobox: storyweaving_scene_no, filterable by: story
	$combo_storyweaving_scene_no = new DataCombo;
	// combobox: role, filterable by: story
	$combo_role = new DataCombo;
	// combobox: character, filterable by: story,role
	$combo_character = new DataCombo;
	// combobox: characterevent_scene
	$combo_characterevent_scene = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='storylines' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='storylines' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `storylines` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found']);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_story->SelectedData = $row['story'];
		$combo_story_act->SelectedData = $row['story_act'];
		$combo_storyweaving_scene_no->SelectedData = $row['storyweaving_scene_no'];
		$combo_role->SelectedData = $row['role'];
		$combo_character->SelectedData = $row['character'];
		$combo_characterevent_scene->SelectedData = $row['characterevent_scene'];
	}else{
		$combo_story->SelectedData = $filterer_story;
		$combo_story_act->SelectedText = ( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_storyweaving_scene_no->SelectedData = $filterer_storyweaving_scene_no;
		$combo_role->SelectedData = $filterer_role;
		$combo_character->SelectedData = $filterer_character;
		$combo_characterevent_scene->SelectedData = $filterer_characterevent_scene;
	}
	$combo_story->HTML = '<span id="story-container' . $rnd1 . '"></span><input type="hidden" name="story" id="story' . $rnd1 . '">';
	$combo_story->MatchText = '<span id="story-container-readonly' . $rnd1 . '"></span><input type="hidden" name="story" id="story' . $rnd1 . '">';
	$combo_story_act->Render();
	$combo_storyweaving_scene_no->HTML = '<span id="storyweaving_scene_no-container' . $rnd1 . '"></span><input type="hidden" name="storyweaving_scene_no" id="storyweaving_scene_no' . $rnd1 . '">';
	$combo_storyweaving_scene_no->MatchText = '<span id="storyweaving_scene_no-container-readonly' . $rnd1 . '"></span><input type="hidden" name="storyweaving_scene_no" id="storyweaving_scene_no' . $rnd1 . '">';
	$combo_role->HTML = '<span id="role-container' . $rnd1 . '"></span><input type="hidden" name="role" id="role' . $rnd1 . '">';
	$combo_role->MatchText = '<span id="role-container-readonly' . $rnd1 . '"></span><input type="hidden" name="role" id="role' . $rnd1 . '">';
	$combo_character->HTML = '<span id="character-container' . $rnd1 . '"></span><input type="hidden" name="character" id="character' . $rnd1 . '">';
	$combo_character->MatchText = '<span id="character-container-readonly' . $rnd1 . '"></span><input type="hidden" name="character" id="character' . $rnd1 . '">';
	$combo_characterevent_scene->HTML = '<span id="characterevent_scene-container' . $rnd1 . '"></span><input type="hidden" name="characterevent_scene" id="characterevent_scene' . $rnd1 . '">';
	$combo_characterevent_scene->MatchText = '<span id="characterevent_scene-container-readonly' . $rnd1 . '"></span><input type="hidden" name="characterevent_scene" id="characterevent_scene' . $rnd1 . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		var current_story__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['story'] : $filterer_story); ?>"};
		var current_storyweaving_scene_no__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['storyweaving_scene_no'] : $filterer_storyweaving_scene_no); ?>"};
		var current_role__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['role'] : $filterer_role); ?>"};
		var current_character__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['character'] : $filterer_character); ?>"};
		var current_characterevent_scene__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['characterevent_scene'] : $filterer_characterevent_scene); ?>"};

		jQuery(function() {
			if(typeof(story_reload__RAND__) == 'function') story_reload__RAND__();
			<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(storyweaving_scene_no_reload__RAND__) == \'function\') storyweaving_scene_no_reload__RAND__(current_story__RAND__.value);' : ''); ?>
			<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(role_reload__RAND__) == \'function\') role_reload__RAND__(current_story__RAND__.value);' : ''); ?>
			<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(character_reload__RAND__) == \'function\') character_reload__RAND__(current_story__RAND__.value, current_role__RAND__.value);' : ''); ?>
			if(typeof(characterevent_scene_reload__RAND__) == 'function') characterevent_scene_reload__RAND__();
		});
		function story_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#story-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: current_story__RAND__.value, t: 'storylines', f: 'story' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						jQuery('[name="story"]').val(resp.results[0].id);
						jQuery('[id=story-container-readonly__RAND__]').html('<span id="story-match-text">' + resp.results[0].text + '</span>');

						if(typeof(storyweaving_scene_no_reload__RAND__) == 'function') storyweaving_scene_no_reload__RAND__(current_story__RAND__.value);
						if(typeof(storyweaving_scene_reload__RAND__) == 'function') storyweaving_scene_reload__RAND__(current_story__RAND__.value);
						if(typeof(storyweaving_sequence_reload__RAND__) == 'function') storyweaving_sequence_reload__RAND__(current_story__RAND__.value);
						if(typeof(role_reload__RAND__) == 'function') role_reload__RAND__(current_story__RAND__.value);

						if(typeof(story_update_autofills__RAND__) == 'function') story_update_autofills__RAND__();
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'storylines', f: 'story' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_story__RAND__.value = e.added.id;
				current_story__RAND__.text = e.added.text;
				jQuery('[name="story"]').val(e.added.id);

						if(typeof(storyweaving_scene_no_reload__RAND__) == 'function') storyweaving_scene_no_reload__RAND__(current_story__RAND__.value);
						if(typeof(storyweaving_scene_reload__RAND__) == 'function') storyweaving_scene_reload__RAND__(current_story__RAND__.value);
						if(typeof(storyweaving_sequence_reload__RAND__) == 'function') storyweaving_sequence_reload__RAND__(current_story__RAND__.value);
						if(typeof(role_reload__RAND__) == 'function') role_reload__RAND__(current_story__RAND__.value);

				if(typeof(story_update_autofills__RAND__) == 'function') story_update_autofills__RAND__();
			});
		<?php }else{ ?>

			jQuery.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_story__RAND__.value, t: 'storylines', f: 'story' }
			}).done(function(resp){
				jQuery('[id=story-container__RAND__], [id=story-container-readonly__RAND__]').html('<span id="story-match-text">' + resp.results[0].text + '</span>');

				if(typeof(story_update_autofills__RAND__) == 'function') story_update_autofills__RAND__();
			});
		<?php } ?>

		}
		function storyweaving_scene_no_reload__RAND__(filterer_story){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#storyweaving_scene_no-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_story: filterer_story, id: current_storyweaving_scene_no__RAND__.value, t: 'storylines', f: 'storyweaving_scene_no' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						jQuery('[name="storyweaving_scene_no"]').val(resp.results[0].id);
						jQuery('[id=storyweaving_scene_no-container-readonly__RAND__]').html('<span id="storyweaving_scene_no-match-text">' + resp.results[0].text + '</span>');


						if(typeof(storyweaving_scene_no_update_autofills__RAND__) == 'function') storyweaving_scene_no_update_autofills__RAND__();
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { filterer_story: filterer_story, s: term, p: page, t: 'storylines', f: 'storyweaving_scene_no' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_storyweaving_scene_no__RAND__.value = e.added.id;
				current_storyweaving_scene_no__RAND__.text = e.added.text;
				jQuery('[name="storyweaving_scene_no"]').val(e.added.id);


				if(typeof(storyweaving_scene_no_update_autofills__RAND__) == 'function') storyweaving_scene_no_update_autofills__RAND__();
			});
		<?php }else{ ?>

			jQuery.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_storyweaving_scene_no__RAND__.value, t: 'storylines', f: 'storyweaving_scene_no' }
			}).done(function(resp){
				jQuery('[id=storyweaving_scene_no-container__RAND__], [id=storyweaving_scene_no-container-readonly__RAND__]').html('<span id="storyweaving_scene_no-match-text">' + resp.results[0].text + '</span>');

				if(typeof(storyweaving_scene_no_update_autofills__RAND__) == 'function') storyweaving_scene_no_update_autofills__RAND__();
			});
		<?php } ?>

		}
		function role_reload__RAND__(filterer_story){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#role-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_story: filterer_story, id: current_role__RAND__.value, t: 'storylines', f: 'role' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						jQuery('[name="role"]').val(resp.results[0].id);
						jQuery('[id=role-container-readonly__RAND__]').html('<span id="role-match-text">' + resp.results[0].text + '</span>');

						if(typeof(character_reload__RAND__) == 'function') character_reload__RAND__($F('story'), current_role__RAND__.value);

						if(typeof(role_update_autofills__RAND__) == 'function') role_update_autofills__RAND__();
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { filterer_story: filterer_story, s: term, p: page, t: 'storylines', f: 'role' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_role__RAND__.value = e.added.id;
				current_role__RAND__.text = e.added.text;
				jQuery('[name="role"]').val(e.added.id);

						if(typeof(character_reload__RAND__) == 'function') character_reload__RAND__($F('story'), current_role__RAND__.value);

				if(typeof(role_update_autofills__RAND__) == 'function') role_update_autofills__RAND__();
			});
		<?php }else{ ?>

			jQuery.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_role__RAND__.value, t: 'storylines', f: 'role' }
			}).done(function(resp){
				jQuery('[id=role-container__RAND__], [id=role-container-readonly__RAND__]').html('<span id="role-match-text">' + resp.results[0].text + '</span>');

				if(typeof(role_update_autofills__RAND__) == 'function') role_update_autofills__RAND__();
			});
		<?php } ?>

		}
		function character_reload__RAND__(filterer_story, filterer_role){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#character-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_story: filterer_story, filterer_role: filterer_role, id: current_character__RAND__.value, t: 'storylines', f: 'character' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						jQuery('[name="character"]').val(resp.results[0].id);
						jQuery('[id=character-container-readonly__RAND__]').html('<span id="character-match-text">' + resp.results[0].text + '</span>');


						if(typeof(character_update_autofills__RAND__) == 'function') character_update_autofills__RAND__();
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { filterer_story: filterer_story, filterer_role: filterer_role, s: term, p: page, t: 'storylines', f: 'character' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_character__RAND__.value = e.added.id;
				current_character__RAND__.text = e.added.text;
				jQuery('[name="character"]').val(e.added.id);


				if(typeof(character_update_autofills__RAND__) == 'function') character_update_autofills__RAND__();
			});
		<?php }else{ ?>

			jQuery.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_character__RAND__.value, t: 'storylines', f: 'character' }
			}).done(function(resp){
				jQuery('[id=character-container__RAND__], [id=character-container-readonly__RAND__]').html('<span id="character-match-text">' + resp.results[0].text + '</span>');

				if(typeof(character_update_autofills__RAND__) == 'function') character_update_autofills__RAND__();
			});
		<?php } ?>

		}
		function characterevent_scene_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#characterevent_scene-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: current_characterevent_scene__RAND__.value, t: 'storylines', f: 'characterevent_scene' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						jQuery('[name="characterevent_scene"]').val(resp.results[0].id);
						jQuery('[id=characterevent_scene-container-readonly__RAND__]').html('<span id="characterevent_scene-match-text">' + resp.results[0].text + '</span>');


						if(typeof(characterevent_scene_update_autofills__RAND__) == 'function') characterevent_scene_update_autofills__RAND__();
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'storylines', f: 'characterevent_scene' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_characterevent_scene__RAND__.value = e.added.id;
				current_characterevent_scene__RAND__.text = e.added.text;
				jQuery('[name="characterevent_scene"]').val(e.added.id);


				if(typeof(characterevent_scene_update_autofills__RAND__) == 'function') characterevent_scene_update_autofills__RAND__();
			});
		<?php }else{ ?>

			jQuery.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_characterevent_scene__RAND__.value, t: 'storylines', f: 'characterevent_scene' }
			}).done(function(resp){
				jQuery('[id=characterevent_scene-container__RAND__], [id=characterevent_scene-container-readonly__RAND__]').html('<span id="characterevent_scene-match-text">' + resp.results[0].text + '</span>');

				if(typeof(characterevent_scene_update_autofills__RAND__) == 'function') characterevent_scene_update_autofills__RAND__();
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$templateCode = @file_get_contents('./templates/storylines_templateDVP.html');
	}else{
		$templateCode = @file_get_contents('./templates/storylines_templateDV.html');
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return storylines_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return storylines_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return storylines_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#story').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#story_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#story_act').replaceWith('<p class=\"form-control-static\" id=\"story_act\">' + (jQuery('#story_act').val() || '') + '</p>'); jQuery('#story_act-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#storyweaving_scene_no').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#storyweaving_scene_no_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#role').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#role_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#character').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#character_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#characterevent_scene').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#characterevent_scene_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#storyline_no').replaceWith('<p class=\"form-control-static\" id=\"storyline_no\">' + (jQuery('#storyline_no').val() || '') + '</p>');\n";
		$jsReadOnly .= "\tjQuery('#storyline').replaceWith('<p class=\"form-control-static\" id=\"storyline\">' + (jQuery('#storyline').val() || '') + '</p>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(story)%%>', $combo_story->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(story)%%>', $combo_story->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(story)%%>', urlencode($combo_story->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(story_act)%%>', $combo_story_act->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(story_act)%%>', $combo_story_act->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(storyweaving_scene_no)%%>', $combo_storyweaving_scene_no->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(storyweaving_scene_no)%%>', $combo_storyweaving_scene_no->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(storyweaving_scene_no)%%>', urlencode($combo_storyweaving_scene_no->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(role)%%>', $combo_role->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(role)%%>', $combo_role->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(role)%%>', urlencode($combo_role->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(character)%%>', $combo_character->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(character)%%>', $combo_character->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(character)%%>', urlencode($combo_character->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(characterevent_scene)%%>', $combo_characterevent_scene->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(characterevent_scene)%%>', $combo_characterevent_scene->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(characterevent_scene)%%>', urlencode($combo_characterevent_scene->MatchText), $templateCode);

	// process foreign key links
	if($selected_id){
		$templateCode=str_replace('<%%PLINK(story)%%>', ($combo_story->SelectedData ? "<span id=\"story_plink1\" class=\"hidden\"><a class=\"btn btn-default\" href=\"story_view.php?SelectedID=" . urlencode($combo_story->SelectedData) . "\"><i class=\"glyphicon glyphicon-search\"></i></a></span>" : ''), $templateCode);
		$templateCode=str_replace('<%%PLINK(storyweaving_scene_no)%%>', ($combo_storyweaving_scene_no->SelectedData ? "<span id=\"storyweaving_scenes_plink2\" class=\"hidden\"><a class=\"btn btn-default\" href=\"storyweaving_scenes_view.php?SelectedID=" . urlencode($combo_storyweaving_scene_no->SelectedData) . "\"><i class=\"glyphicon glyphicon-search\"></i></a></span>" : ''), $templateCode);
		$templateCode=str_replace('<%%PLINK(role)%%>', ($combo_role->SelectedData ? "<span id=\"class_dramatica_archetype_plink3\" class=\"hidden\"><a class=\"btn btn-default\" href=\"class_dramatica_archetype_view.php?SelectedID=" . urlencode($combo_role->SelectedData) . "\"><i class=\"glyphicon glyphicon-search\"></i></a></span>" : ''), $templateCode);
		$templateCode=str_replace('<%%PLINK(character)%%>', ($combo_character->SelectedData ? "<span id=\"story_characters_plink4\" class=\"hidden\"><a class=\"btn btn-default\" href=\"story_characters_view.php?SelectedID=" . urlencode($combo_character->SelectedData) . "\"><i class=\"glyphicon glyphicon-search\"></i></a></span>" : ''), $templateCode);
		$templateCode=str_replace('<%%PLINK(characterevent_scene)%%>', ($combo_characterevent_scene->SelectedData ? "<span id=\"code_encounters_plink5\" class=\"hidden\"><a class=\"btn btn-default\" href=\"code_encounters_view.php?SelectedID=" . urlencode($combo_characterevent_scene->SelectedData) . "\"><i class=\"glyphicon glyphicon-search\"></i></a></span>" : ''), $templateCode);
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(story)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(story_act)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(storyweaving_scene_no)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(role)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(character)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(characterevent_scene)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(storyline_no)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(storyline)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', htmlspecialchars($row['id'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(story)%%>', htmlspecialchars($row['story'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(story)%%>', urlencode($urow['story']), $templateCode);
		$templateCode=str_replace('<%%VALUE(story_act)%%>', htmlspecialchars($row['story_act'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(story_act)%%>', urlencode($urow['story_act']), $templateCode);
		$templateCode=str_replace('<%%VALUE(storyweaving_scene_no)%%>', htmlspecialchars($row['storyweaving_scene_no'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(storyweaving_scene_no)%%>', urlencode($urow['storyweaving_scene_no']), $templateCode);
		$templateCode=str_replace('<%%VALUE(role)%%>', htmlspecialchars($row['role'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(role)%%>', urlencode($urow['role']), $templateCode);
		$templateCode=str_replace('<%%VALUE(character)%%>', htmlspecialchars($row['character'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(character)%%>', urlencode($urow['character']), $templateCode);
		$templateCode=str_replace('<%%VALUE(characterevent_scene)%%>', htmlspecialchars($row['characterevent_scene'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(characterevent_scene)%%>', urlencode($urow['characterevent_scene']), $templateCode);
		$templateCode=str_replace('<%%VALUE(storyline_no)%%>', htmlspecialchars($row['storyline_no'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(storyline_no)%%>', urlencode($urow['storyline_no']), $templateCode);
		if($dvprint){
			$templateCode = str_replace('<%%VALUE(storyline)%%>', nl2br(htmlspecialchars($row['storyline'], ENT_QUOTES)), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(storyline)%%>', htmlspecialchars($row['storyline'], ENT_QUOTES), $templateCode);
		}
		$templateCode=str_replace('<%%URLVALUE(storyline)%%>', urlencode($urow['storyline']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(story)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(story)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(story_act)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(story_act)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(storyweaving_scene_no)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(storyweaving_scene_no)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(role)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(role)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(character)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(character)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(characterevent_scene)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(characterevent_scene)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(storyline_no)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(storyline_no)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(storyline)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(storyline)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_POST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('[id^=\"{$name}_plink\"]').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode.="\tstoryweaving_scene_no_update_autofills$rnd1 = function(){\n";
	$templateCode.="\t\tnew Ajax.Request(\n";
	if($dvprint){
		$templateCode.="\t\t\t'storylines_autofill.php?rnd1=$rnd1&mfk=storyweaving_scene_no&id='+encodeURIComponent('".addslashes($row['storyweaving_scene_no'])."'),\n";
		$templateCode.="\t\t\t{encoding: 'UTF-8', method: 'get'}\n";
	}else{
		$templateCode.="\t\t\t'storylines_autofill.php?rnd1=$rnd1&mfk=storyweaving_scene_no&id=' + encodeURIComponent(current_storyweaving_scene_no{$rnd1}.value),\n";
		$templateCode.="\t\t\t{encoding: 'UTF-8', method: 'get', onCreate: function(){ \$('storyweaving_scene_no$rnd1').disable(); \$('storyweaving_scene_noLoading').innerHTML='<img src=loading.gif align=top>'; }, onComplete: function(){".(($arrPerm[1] || (($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3)) ? "\$('storyweaving_scene_no$rnd1').enable(); " : "\$('storyweaving_scene_no$rnd1').disable(); ")."\$('storyweaving_scene_noLoading').innerHTML='';}}\n";
	}
	$templateCode.="\t\t);\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$('storyweaving_scene_no_caption') != undefined) \$('storyweaving_scene_no_caption').onchange=storyweaving_scene_no_update_autofills$rnd1;\n";

	$templateCode.="\tcharacterevent_scene_update_autofills$rnd1 = function(){\n";
	$templateCode.="\t\tnew Ajax.Request(\n";
	if($dvprint){
		$templateCode.="\t\t\t'storylines_autofill.php?rnd1=$rnd1&mfk=characterevent_scene&id='+encodeURIComponent('".addslashes($row['characterevent_scene'])."'),\n";
		$templateCode.="\t\t\t{encoding: 'UTF-8', method: 'get'}\n";
	}else{
		$templateCode.="\t\t\t'storylines_autofill.php?rnd1=$rnd1&mfk=characterevent_scene&id=' + encodeURIComponent(current_characterevent_scene{$rnd1}.value),\n";
		$templateCode.="\t\t\t{encoding: 'UTF-8', method: 'get', onCreate: function(){ \$('characterevent_scene$rnd1').disable(); \$('characterevent_sceneLoading').innerHTML='<img src=loading.gif align=top>'; }, onComplete: function(){".(($arrPerm[1] || (($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3)) ? "\$('characterevent_scene$rnd1').enable(); " : "\$('characterevent_scene$rnd1').disable(); ")."\$('characterevent_sceneLoading').innerHTML='';}}\n";
	}
	$templateCode.="\t\t);\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$('characterevent_scene_caption') != undefined) \$('characterevent_scene_caption').onchange=characterevent_scene_update_autofills$rnd1;\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode=preg_replace('/blank.gif" rel="lightbox\[.*?\]"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: storylines_dv
	if(function_exists('storylines_dv')){
		$args=array();
		storylines_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>