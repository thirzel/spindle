<?php
// This script and data application were generated by AppGini 5.31
// Download AppGini for free from http://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/storylines.php");
	include("$currDir/storylines_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('storylines');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "storylines";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV=array(   
		"`storylines`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "story",
		"`storylines`.`story_act`" => "story_act",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`id`), CONCAT_WS('',   `storyweaving_scenes1`.`id`), '') /* Storyweaving scene no. */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`step`) || CHAR_LENGTH(`class_dramatica_throughline1`.`throughline`), CONCAT_WS('',   `storyweaving_scenes1`.`step`, '  ', `class_dramatica_throughline1`.`throughline`), '') /* Storyweaving scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`sequence`), CONCAT_WS('',   `storyweaving_scenes1`.`sequence`), '') /* Sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_issue1`.`issue`) || CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_issue1`.`issue`, `class_dramatica_themes1`.`theme`), '') /* Theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`, ' '), '') /* Role */" => "role",
		"IF(    CHAR_LENGTH(`story_characters1`.`character`) || CHAR_LENGTH(`story_characters1`.`cw_name`), CONCAT_WS('',   `story_characters1`.`character`, ' - ', `story_characters1`.`cw_name`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`code_encounters1`.`id`) || CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounters1`.`id`, '  ', `code_encounter_scenes1`.`scene`), '') /* Encounter */" => "characterevent_scene",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`) || CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, `code_encounter_scenes3`.`scene`, '  '), '') /* Character scene */" => "character_event",
		"`storylines`.`storyline_no`" => "storyline_no",
		"`storylines`.`storyline`" => "storyline"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`storylines`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
		13 => 13
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV=array(   
		"`storylines`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "story",
		"`storylines`.`story_act`" => "story_act",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`id`), CONCAT_WS('',   `storyweaving_scenes1`.`id`), '') /* Storyweaving scene no. */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`step`) || CHAR_LENGTH(`class_dramatica_throughline1`.`throughline`), CONCAT_WS('',   `storyweaving_scenes1`.`step`, '  ', `class_dramatica_throughline1`.`throughline`), '') /* Storyweaving scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`sequence`), CONCAT_WS('',   `storyweaving_scenes1`.`sequence`), '') /* Sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_issue1`.`issue`) || CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_issue1`.`issue`, `class_dramatica_themes1`.`theme`), '') /* Theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`, ' '), '') /* Role */" => "role",
		"IF(    CHAR_LENGTH(`story_characters1`.`character`) || CHAR_LENGTH(`story_characters1`.`cw_name`), CONCAT_WS('',   `story_characters1`.`character`, ' - ', `story_characters1`.`cw_name`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`code_encounters1`.`id`) || CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounters1`.`id`, '  ', `code_encounter_scenes1`.`scene`), '') /* Encounter */" => "characterevent_scene",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`) || CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, `code_encounter_scenes3`.`scene`, '  '), '') /* Character scene */" => "character_event",
		"`storylines`.`storyline_no`" => "storyline_no",
		"`storylines`.`storyline`" => "storyline"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters=array(   
		"`storylines`.`id`" => "Storyline no.",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "Story",
		"`storylines`.`story_act`" => "Act/Chapter",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`id`), CONCAT_WS('',   `storyweaving_scenes1`.`id`), '') /* Storyweaving scene no. */" => "Storyweaving scene no.",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`step`) || CHAR_LENGTH(`class_dramatica_throughline1`.`throughline`), CONCAT_WS('',   `storyweaving_scenes1`.`step`, '  ', `class_dramatica_throughline1`.`throughline`), '') /* Storyweaving scene */" => "Storyweaving scene",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`sequence`), CONCAT_WS('',   `storyweaving_scenes1`.`sequence`), '') /* Sequence */" => "Sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_issue1`.`issue`) || CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_issue1`.`issue`, `class_dramatica_themes1`.`theme`), '') /* Theme */" => "Theme",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`, ' '), '') /* Role */" => "Role",
		"IF(    CHAR_LENGTH(`story_characters1`.`character`) || CHAR_LENGTH(`story_characters1`.`cw_name`), CONCAT_WS('',   `story_characters1`.`character`, ' - ', `story_characters1`.`cw_name`), '') /* Character */" => "Character",
		"IF(    CHAR_LENGTH(`code_encounters1`.`id`) || CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounters1`.`id`, '  ', `code_encounter_scenes1`.`scene`), '') /* Encounter */" => "Encounter",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`) || CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, `code_encounter_scenes3`.`scene`, '  '), '') /* Character scene */" => "Character scene",
		"`storylines`.`storyline_no`" => "Scene no.",
		"`storylines`.`storyline`" => "Storyline"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS=array(   
		"`storylines`.`id`" => "id",
		"IF(    CHAR_LENGTH(`story1`.`id`) || CHAR_LENGTH(`story1`.`story`), CONCAT_WS('',   `story1`.`id`, '  ', `story1`.`story`), '') /* Story */" => "story",
		"`storylines`.`story_act`" => "story_act",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`id`), CONCAT_WS('',   `storyweaving_scenes1`.`id`), '') /* Storyweaving scene no. */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`step`) || CHAR_LENGTH(`class_dramatica_throughline1`.`throughline`), CONCAT_WS('',   `storyweaving_scenes1`.`step`, '  ', `class_dramatica_throughline1`.`throughline`), '') /* Storyweaving scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`storyweaving_scenes1`.`sequence`), CONCAT_WS('',   `storyweaving_scenes1`.`sequence`), '') /* Sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_issue1`.`issue`) || CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_issue1`.`issue`, `class_dramatica_themes1`.`theme`), '') /* Theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_archetype1`.`archetype`, ' '), '') /* Role */" => "role",
		"IF(    CHAR_LENGTH(`story_characters1`.`character`) || CHAR_LENGTH(`story_characters1`.`cw_name`), CONCAT_WS('',   `story_characters1`.`character`, ' - ', `story_characters1`.`cw_name`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`code_encounters1`.`id`) || CHAR_LENGTH(`code_encounter_scenes1`.`scene`), CONCAT_WS('',   `code_encounters1`.`id`, '  ', `code_encounter_scenes1`.`scene`), '') /* Encounter */" => "characterevent_scene",
		"IF(    CHAR_LENGTH(`code_encounter_scenes2`.`scene`) || CHAR_LENGTH(`code_encounter_scenes3`.`scene`), CONCAT_WS('',   `code_encounter_scenes2`.`scene`, `code_encounter_scenes3`.`scene`, '  '), '') /* Character scene */" => "character_event",
		"`storylines`.`storyline_no`" => "storyline_no",
		"`storylines`.`storyline`" => "storyline"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'story' => 'Story', 'storyweaving_scene_no' => 'Storyweaving scene no.', 'role' => 'Role', 'character' => 'Character', 'characterevent_scene' => 'Encounter');

	$x->QueryFrom="`storylines` LEFT JOIN `story` as story1 ON `story1`.`id`=`storylines`.`story` LEFT JOIN `storyweaving_scenes` as storyweaving_scenes1 ON `storyweaving_scenes1`.`id`=`storylines`.`storyweaving_scene_no` LEFT JOIN `class_dramatica_archetype` as class_dramatica_archetype1 ON `class_dramatica_archetype1`.`id`=`storylines`.`role` LEFT JOIN `story_characters` as story_characters1 ON `story_characters1`.`id`=`storylines`.`character` LEFT JOIN `code_encounters` as code_encounters1 ON `code_encounters1`.`id`=`storylines`.`characterevent_scene` LEFT JOIN `code_encounter_scenes` as code_encounter_scenes1 ON `code_encounter_scenes1`.`id`=`code_encounters1`.`story_scene` LEFT JOIN `class_dramatica_throughline` as class_dramatica_throughline1 ON `class_dramatica_throughline1`.`id`=`storyweaving_scenes1`.`throughline` LEFT JOIN `class_dramatica_issue` as class_dramatica_issue1 ON `class_dramatica_issue1`.`id`=`storyweaving_scenes1`.`issue` LEFT JOIN `class_dramatica_themes` as class_dramatica_themes1 ON `class_dramatica_themes1`.`id`=`storyweaving_scenes1`.`theme` LEFT JOIN `code_encounter_scenes` as code_encounter_scenes2 ON `code_encounter_scenes2`.`id`=`code_encounters1`.`sceneA` LEFT JOIN `code_encounter_scenes` as code_encounter_scenes3 ON `code_encounter_scenes3`.`id`=`code_encounters1`.`sceneB` ";
	$x->QueryWhere='';
	$x->QueryOrder='';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "storylines_view.php";
	$x->RedirectAfterInsert = "storylines_view.php";
	$x->TableTitle = "Storylines";
	$x->TableIcon = "table.gif";
	$x->PrimaryKey = "`storylines`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("Storyline no.", "Story", "Act/Chapter", "Storyweaving scene no.", "Storyweaving scene", "Sequence", "Theme", "Scene no.", "Storyline");
	$x->ColFieldName = array('id', 'story', 'story_act', 'storyweaving_scene_no', 'storyweaving_scene', 'storyweaving_sequence', 'storyweaving_theme', 'storyline_no', 'storyline');
	$x->ColNumber  = array(1, 2, 3, 4, 5, 6, 7, 12, 13);

	$x->Template = 'templates/storylines_templateTV.html';
	$x->SelectedTemplate = 'templates/storylines_templateTVS.html';
	$x->ShowTableHeader = 1;
	$x->ShowRecordSlots = 0;
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `storylines`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='storylines' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `storylines`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='storylines' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`storylines`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: storylines_init
	$render=TRUE;
	if(function_exists('storylines_init')){
		$args=array();
		$render=storylines_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: storylines_header
	$headerCode='';
	if(function_exists('storylines_header')){
		$args=array();
		$headerCode=storylines_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: storylines_footer
	$footerCode='';
	if(function_exists('storylines_footer')){
		$args=array();
		$footerCode=storylines_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>